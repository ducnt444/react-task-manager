{"version":3,"sources":["views/Home/Task.js","views/Home/Home.js","components/ModalMain.js","views/AddTask.js","assets/react-logo-min.png","components/Loading.js","views/EditTask.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onComplete","history","useHistory","formatter","Intl","DateTimeFormat","timeZone","year","month","day","timeFromServer","taskDate","localTime","format","Date","className","taskName","onClick","isDone","id","push","Home","tasks","doneTasks","filter","todoTasks","length","to","map","ModalMain","modalContent","visible","confirmDelete","confirmLoading","handleCancel","onOk","onCancel","AddTask","reRender","toggleLoading","useState","setTaskName","setTaskDate","htmlFor","type","value","onChange","e","target","dateFormat","selected","date","minDate","subDays","newTask","axios","post","then","res","console","log","Loading","isLoading","src","logo","alt","EditTask","useParams","useEffect","get","data","parseISO","editedTask","patch","App","deleteID","setDeleteID","setTasks","toggleFetching","setToggleFetching","setIsLoading","setModalContent","setVisible","setConfirmLoading","mode","delete","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56d09907.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { MdDone } from \"react-icons/md\";\r\nimport { FaRedo } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Task = ({ task, onDelete, onComplete }) => {\r\n  const history = useHistory();\r\n  var options = {\r\n    timeZone: \"Asia/Ho_Chi_Minh\",\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  };\r\n\r\n  var formatter = new Intl.DateTimeFormat([], options);\r\n  var timeFromServer = task.taskDate;\r\n  var localTime = formatter.format(new Date(timeFromServer));\r\n\r\n  return (\r\n    <div className=\"taskItem\">\r\n      <div className=\"taskContent\">\r\n        <h3 className=\"taskName\">{task.taskName}</h3>\r\n        <h4 className=\"taskDate\">{localTime}</h4>\r\n      </div>\r\n      <button\r\n        className=\"doneBtn\"\r\n        onClick={() => onComplete(task.isDone, task.id)}\r\n      >\r\n        {task.isDone ? <FaRedo /> : <MdDone />}\r\n      </button>\r\n\r\n      <button\r\n        className=\"editBtn\"\r\n        onClick={() => history.push(`/edit-task/${task.id}`)}\r\n      >\r\n        <BiEditAlt />\r\n      </button>\r\n      <button className=\"deleteBtn\" onClick={() => onDelete(task.id)}>\r\n        <RiDeleteBinLine />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = ({ tasks, onDelete, onComplete }) => {\r\n  const doneTasks = tasks.filter((task) => task.isDone === true);\r\n  const todoTasks = tasks.filter((task) => task.isDone === false);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Task Manager by React</h1>\r\n        <div className=\"header-content\">\r\n          <div className=\"statistics-area\">\r\n            <div className=\"statistics\">\r\n              <div className=\"header-item\">{doneTasks.length}</div>\r\n              <span className=\"statistics-text\">Completed</span>\r\n            </div>\r\n            <div className=\"statistics\">\r\n              <div className=\"header-item\">{todoTasks.length}</div>\r\n              <span className=\"statistics-text\">Ongoing</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"header-item header-btn\">\r\n            <Link to=\"/add-task\">\r\n              <span>Add</span> <AiOutlinePlusCircle />\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"home\">\r\n          <div className=\"doneTasks\">\r\n            <h2>Ongoing tasks: </h2>\r\n            {todoTasks.map((task) => (\r\n              <Task\r\n                key={task.id}\r\n                task={task}\r\n                onDelete={onDelete}\r\n                onComplete={onComplete}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"todoTasks\">\r\n            <h2>Completed tasks: </h2>\r\n            {doneTasks.map((task) => (\r\n              <Task\r\n                key={task.id}\r\n                task={task}\r\n                onDelete={onDelete}\r\n                onComplete={onComplete}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst ModalMain = ({\r\n  modalContent,\r\n  visible,\r\n  confirmDelete,\r\n  confirmLoading,\r\n  handleCancel,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      // title=\"Confirmation\"\r\n      visible={visible}\r\n      onOk={confirmDelete}\r\n      confirmLoading={confirmLoading}\r\n      onCancel={handleCancel}\r\n    >\r\n      <p className=\"modalContent\">{modalContent}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalMain;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { subDays } from \"date-fns\";\r\n\r\n// import { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\n// import vi from \"date-fns/locale/vi\";\r\n// registerLocale(\"vi\", vi);\r\n\r\nconst AddTask = ({ reRender, toggleLoading }) => {\r\n  const history = useHistory();\r\n\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(null);\r\n\r\n  const handleNameChange = (e) => {\r\n    setTaskName(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setTaskDate(date);\r\n    // console.log(date);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (taskName && taskDate) {\r\n      const newTask = { taskName, taskDate, isDone: false };\r\n      toggleLoading(true);\r\n      axios\r\n        .post(\"https://test-heroku444.herokuapp.com/tasks\", newTask)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setTaskName(\"\");\r\n          setTaskDate(\"\");\r\n          reRender();\r\n          toggleLoading(false);\r\n          history.push(\"/\");\r\n        });\r\n    } else {\r\n      console.log(\"empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Add task</h1>\r\n        <div className=\"header-content\">\r\n          <button className=\"header-item header-btn\">\r\n            <Link to=\"/\">\r\n              <span>Back</span>\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"taskName\">Add task:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"taskName\"\r\n            value={taskName}\r\n            onChange={handleNameChange}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"taskDate\">Task date:</label>\r\n          <DatePicker\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            selected={taskDate}\r\n            onChange={handleDateChange}\r\n            minDate={subDays(new Date(), 0)}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"confirm-btn blue-text-btn btn\"\r\n        >\r\n          Confirm\r\n        </button>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","export default __webpack_public_path__ + \"static/media/react-logo-min.90175bd1.png\";","import React from \"react\";\r\nimport logo from \"../assets/react-logo-min.png\";\r\n\r\nconst Loading = ({ isLoading }) => {\r\n  return (\r\n    <div className={`loading ${isLoading ? \"show\" : \"\"}`}>\r\n      <img src={logo} alt=\"loading\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { subDays, parseISO } from \"date-fns\";\r\n\r\n// import { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\n// import vi from \"date-fns/locale/vi\";\r\n// registerLocale(\"vi\", vi);\r\n\r\nconst EditTask = ({ toggleLoading, reRender }) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    toggleLoading(true);\r\n    axios\r\n      .get(`https://test-heroku444.herokuapp.com/tasks/${id}`)\r\n      .then((res) => {\r\n        setTaskName(res.data.taskName);\r\n        setTaskDate(parseISO(res.data.taskDate));\r\n        toggleLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setTaskName(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setTaskDate(date);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (taskName && taskDate) {\r\n      const editedTask = { taskName, taskDate };\r\n      toggleLoading(true);\r\n      axios\r\n        .patch(`https://test-heroku444.herokuapp.com/tasks/${id}`, editedTask)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setTaskName(\"\");\r\n          setTaskDate(\"\");\r\n          reRender();\r\n          toggleLoading(false);\r\n          history.push(\"/\");\r\n        });\r\n    } else {\r\n      console.log(\"empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Edit task</h1>\r\n        <div className=\"header-content\">\r\n          <button className=\"header-item header-btn\">\r\n            <Link to=\"/\">\r\n              <span>Back</span>\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"taskName\">Edit task:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"taskName\"\r\n            value={taskName}\r\n            onChange={handleNameChange}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"taskDate\">Task date:</label>\r\n          <DatePicker\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            selected={taskDate}\r\n            onChange={handleDateChange}\r\n            minDate={subDays(new Date(), 0)}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"confirm-btn blue-text-btn btn\"\r\n        >\r\n          Confirm\r\n        </button>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import \"./App.css\";\nimport Home from \"./views/Home/Home\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport ModalMain from \"./components/ModalMain\";\nimport AddTask from \"./views/AddTask\";\nimport Loading from \"./components/Loading\";\nimport EditTask from \"./views/EditTask\";\n\nfunction App() {\n  const history = useHistory();\n  console.log(history);\n\n  const [deleteID, setDeleteID] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [toggleFetching, setToggleFetching] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  //modal\n  const [modalContent, setModalContent] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  //after page load: get data from server and use as base state\n  useEffect(() => {\n    axios.get(\"https://test-heroku444.herokuapp.com/tasks\").then((res) => {\n      setTasks(res.data);\n      setIsLoading(false);\n    });\n  }, [toggleFetching]);\n\n  //toggleLoading\n  const toggleLoading = (mode) => {\n    setIsLoading(mode);\n  };\n\n  //re-render app\n  const reRender = () => {\n    setToggleFetching((toggleFetching) => toggleFetching + 1);\n  };\n\n  //complete task\n  const handleComplete = (isDone, id) => {\n    toggleLoading(true);\n    axios\n      .patch(`https://test-heroku444.herokuapp.com/tasks/${id}`, {\n        isDone: !isDone,\n      })\n      .then(() => {\n        setToggleFetching((toggleFetching) => toggleFetching + 1);\n        toggleLoading(false);\n      });\n  };\n\n  //delete task\n  const handleDelete = (id) => {\n    setModalContent(\"Do you want to delete this task?\");\n    setVisible(true);\n    setDeleteID(id);\n  };\n  const confirmDelete = () => {\n    setConfirmLoading(true);\n    axios\n      .delete(`https://test-heroku444.herokuapp.com/tasks/${deleteID}`)\n      .then(() => {\n        setTasks(tasks.filter((task) => task.id !== deleteID));\n        setConfirmLoading(false);\n        setVisible(false);\n      });\n  };\n  const confirmCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Loading isLoading={isLoading} />\n        <ModalMain\n          modalContent={modalContent}\n          visible={visible}\n          confirmDelete={confirmDelete}\n          confirmLoading={confirmLoading}\n          handleCancel={confirmCancel}\n        />\n        <Switch>\n          <Route path=\"/add-task\">\n            <AddTask toggleLoading={toggleLoading} reRender={reRender} />\n          </Route>\n          <Route path=\"/edit-task/:id\">\n            <EditTask toggleLoading={toggleLoading} reRender={reRender} />\n          </Route>\n          <Route path=\"/\">\n            <Home\n              tasks={tasks}\n              onDelete={handleDelete}\n              onComplete={handleComplete}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}